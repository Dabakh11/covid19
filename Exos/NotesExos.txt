from selenium import webdriver
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.firefox.service import Service as FirefoxService
from webdriver_manager.firefox import GeckoDriverManager

# Configurer le service Firefox
service = FirefoxService(GeckoDriverManager().install())

# Initialiser le navigateur Firefox
driver = webdriver.Firefox(service=service)

url = "https://www.premierleague.com/stats/top/players/goals"
driver.get(url)

print(driver.page_source)

soup = BeautifulSoup(driver.page_source,"html.parser")

page = soup.find_all("tr")
page

entete = page[0]  # on récupére la 1ére table
entete

array = []
for a in entete.find_all("th"):
    array.append(a.text)
array

stat = page[1]
array = []
for b in stat.find_all("td"):
    array.append(b.text)
array

rows = page[1:]
for row in rows :
    for col in row.find_all("td"):
        print(col.text)


			-----------0----------


from selenium import webdriver
from bs4 import BeautifulSoup
from selenium.webdriver.firefox.service import Service as FirefoxService
from webdriver_manager.firefox import GeckoDriverManager

# Configurer le service Firefox
service = FirefoxService(GeckoDriverManager().install())

# Initialiser le navigateur Firefox
driver = webdriver.Firefox(service=service)

# Fonction pour extraire les données d'une URL spécifique
def extract_stats(url):
    driver.get(url)
    soup = BeautifulSoup(driver.page_source, "html.parser")
    page = soup.find_all("tr")
    
    # Extraire les en-têtes de table
    headers = [th.text for th in page[0].find_all("th")]
    
    # Extraire les données des joueurs
    players_data = []
    for row in page[1:]:
        row_data = [td.text.strip() for td in row.find_all("td")]
        players_data.append(row_data)
    
    return headers, players_data

# URL des meilleurs buteurs
url_goals = "https://www.premierleague.com/stats/top/players/goals"
headers_goals, top_scorers = extract_stats(url_goals)

# URL des meilleurs passeurs
url_assists = "https://www.premierleague.com/stats/top/players/goal_assist"
headers_assists, top_assisters = extract_stats(url_assists)

# Afficher les meilleurs buteurs
print("Meilleurs Buteurs:")
print(headers_goals)
for player in top_scorers:
    print(player)

# Afficher les meilleurs passeurs
print("\nMeilleurs Passeurs:")
print(headers_assists)
for player in top_assisters:
    print(player)

# Fermer le navigateur
driver.quit()
